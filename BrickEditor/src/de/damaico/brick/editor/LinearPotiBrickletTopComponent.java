/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.damaico.brick.editor;

import com.tinkerforge.BrickMaster;
import com.tinkerforge.BrickletLinearPoti;
import com.tinkerforge.IPConnection.TimeoutException;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Exceptions;
import org.openide.util.Lookup.Result;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
    dtd = "-//de.damaico.brick.editor//LinearPotiBricklet//EN",
autostore = false)
@TopComponent.Description(
    preferredID = "LinearPotiBrickletTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "de.damaico.brick.editor.LinearPotiBrickletTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_LinearPotiBrickletAction",
preferredID = "LinearPotiBrickletTopComponent")
@Messages({
    "CTL_LinearPotiBrickletAction=LinearPotiBricklet",
    "CTL_LinearPotiBrickletTopComponent=LinearPotiBricklet Window",
    "HINT_LinearPotiBrickletTopComponent=This is a LinearPotiBricklet window"
})
public final class LinearPotiBrickletTopComponent extends TopComponent implements LookupListener {
    private Result<BrickletLinearPoti> allDevicesInContext;

    public LinearPotiBrickletTopComponent() {
        initComponents();
        setName(Bundle.CTL_LinearPotiBrickletTopComponent());
        setToolTipText(Bundle.HINT_LinearPotiBrickletTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jTextField1.setText(org.openide.util.NbBundle.getMessage(LinearPotiBrickletTopComponent.class, "LinearPotiBrickletTopComponent.jTextField1.text")); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        add(jTextField1, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(LinearPotiBrickletTopComponent.class, "LinearPotiBrickletTopComponent.jLabel1.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(jLabel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        allDevicesInContext = Utilities.actionsGlobalContext().lookupResult(BrickletLinearPoti.class);
        
        allDevicesInContext.addLookupListener(this);
    }

    @Override
    public void componentClosed() {
        allDevicesInContext.removeLookupListener(this);
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void resultChanged(LookupEvent le) {
        for (BrickletLinearPoti blp : allDevicesInContext.allInstances()) {
            try {
                jTextField1.setText(String.valueOf(blp.getPosition()));
            } catch (TimeoutException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }
}
